#!/usr/bin/env python

import re
import subprocess
import sys

modified = re.compile('^(?:M|A)(\s+)(?P<name>.*)')

def rebasing():
        process = subprocess.Popen(["git", "branch"],
                                   stdout = subprocess.PIPE,
                                   stderr = subprocess.PIPE)

        if process.wait():
            print "prepare-commit-hook error running git: %s" % process.communicate()[1]
            sys.exit(-1)

        return process.communicate()[0].split('\n')[0].startswith("* (no branch, rebasing")

def main(msg_file):
    chroma_externals_modified = False

    p = subprocess.Popen(['git', 'status', '--porcelain'], stdout=subprocess.PIPE)
    out, err = p.communicate()
    for line in out.splitlines():
        match = modified.match(line)
        if match:
            chroma_externals_modified = chroma_externals_modified | (match.group('name') == 'chroma-externals')

    if not rebasing() and chroma_externals_modified:
        with open(msg_file, 'r') as f:
            lines = f.readlines()

        message = '# WARNING *** this patch modifies the chroma-externals reference are you sure this is intended *** WARNING'

        if lines[0] != message:
            lines = [message, "\n", "\n"] + lines

        with open(msg_file, 'w') as f:
            f.writelines(lines)


if __name__ == '__main__':
    main(sys.argv[1])
