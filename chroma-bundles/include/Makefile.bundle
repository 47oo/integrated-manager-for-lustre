REPO        := $(patsubst %/,%,$(REPO))
BUNDLE_RPMS := $(shell python ../include/find_deps.py $(REPO) "$(RPMS)" "$(EXCLUDES)")
VERSION     ?= 0.0.0
NAME        ?= $(notdir $(CURDIR))
BUNDLE_NAME ?= $(NAME)-$(VERSION)-bundle

all: $(BUNDLE_NAME).tar.gz install

decruftinate:
	exit 0
	@echo "Checking for cruft in $(CURDIR)/repo..."
	@rpm_name() { base=$${1##*/}; name=$${base%-*}; version=$${name%-*}; name=$${name%-*}; echo $$name; }; \
	cd repo; \
	WANTED=""; \
	for rpm in $(BUNDLE_RPMS); do \
	  WANTED="$$WANTED $$(rpm_name $$rpm)"; \
	done; \
	echo "Desired RPMs: $$WANTED"; \
	for exists in $$(ls *.rpm 2>/dev/null); do \
	    name=$$(rpm_name $$exists); \
		if [[ $$WANTED != *$$name* ]]; then \
		    echo "removing cruft: $$name"; \
			rm -f $$exists; \
		fi; \
	done

# TODO - ideally, we would only rebuild $(BUNDLE_NAME).tar.gz if decrufinate
# removed some cruft.  it will take some thinking to restructre to achieve
# that
$(BUNDLE_NAME).tar.gz: decruftinate $(patsubst %,stamps/%.rpm,$(BUNDLE_RPMS))
	cd repo && createrepo --pretty .
	echo "{\"name\": \"$(NAME)\", \"version\": \"$(VERSION)\", \"description\": \"$(DESC)\"}" > repo/meta
	rm -f *.tar.gz
	tar -C repo -czf $@ .

stamps/%.rpm: $(REPO)/%.rpm Makefile
	# can't trust the contents of the repo if even one thing is out
	# of date, so just nuke it and recreate it
	rm -rf repo stamps
	mkdir repo stamps
	ln $(patsubst %,$(REPO)/%.rpm,$(BUNDLE_RPMS)) repo
	touch $(patsubst %,stamps/%.rpm,$(BUNDLE_RPMS))

$(TOP)/../artifacts/$(BUNDLE_NAME).tar.gz: $(BUNDLE_NAME).tar.gz
	mkdir -p $(TOP)/../artifacts
	rm -f $@
	ln $^ $@

install: $(TOP)/../artifacts/$(BUNDLE_NAME).tar.gz

clean:
	rm -rf repo stamps $(BUNDLE_NAME).tar.gz

list:
	@echo "$(BUNDLE_RPMS)" | tr ' ' '\n'

name:
	@echo "$(NAME)"
