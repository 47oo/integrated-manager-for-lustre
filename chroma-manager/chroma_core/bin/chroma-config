#!/usr/bin/env python
#
# ==============================
# Copyright 2011 Whamcloud, Inc.
# ==============================

import sys
import os
bin_dir = os.path.abspath(os.path.dirname(sys.modules['__main__'].__file__))
project_dir = "/usr/share/chroma-manager"
sys.path.append(project_dir)

try:
    from django.core.management import setup_environ
    import settings
    setup_environ(settings)

    from chroma_core.lib.service_config import log, ServiceConfig
except ImportError, e:
    print """%s
    
Import failed.  Note: this script is only for
use in production mode, not development, requires root
and assumes systemwide installation paths.""" % e
    sys.exit(-1)

if __name__ == '__main__':
    cc = ServiceConfig()
    try:
        command = sys.argv[1]
    except IndexError:
        log.error("Usage: %s <setup|validate|start|restart|stop>" % sys.argv[0])
        sys.exit(-1)

    def print_errors(errors):
        if errors:
            log.error("Errors found:")
            for error in errors:
                log.error("  * %s" % error)
        else:
            log.info("OK.")

    if command == 'setup':
        if len(sys.argv) == 2:
            args = []
        elif len(sys.argv) == 4:
            args = [sys.argv[2], sys.argv[3]]
        else:
            log.error("Usage: setup [username] [password]")
            sys.exit(-1)

        errors = cc.setup(*args)
        print_errors(errors)
        if errors:
            sys.exit(-1)
        else:
            sys.exit(0)
    elif command == 'validate':
        errors = cc.validate()
        print_errors(errors)
        if errors:
            sys.exit(1)
        else:
            sys.exit(0)
    elif command == 'stop':
        cc.stop()
    elif command == 'start':
        cc.start()
    elif command == 'restart':
        cc.stop()
        cc.start()
    else:
        log.error("Invalid command '%s'" % command)
        sys.exit("-1")

