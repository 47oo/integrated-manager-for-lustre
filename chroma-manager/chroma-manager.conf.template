map $ssl_client_s_dn $ssl_client_s_dn_cn {
    default "";
    ~/CN=(?<CN>[^/]+) $CN;
}

server {
    listen {{HTTP_FRONTEND_PORT}};
    return 301 https://$http_host$request_uri;
}

server {
    listen {{HTTPS_FRONTEND_PORT}} ssl http2;

    error_page 497 https://$http_host$request_uri;

    proxy_read_timeout 330s;

    include {{APP_PATH}}/mime.types;

    ssl_certificate {{SSL_PATH}}/manager.crt;
    ssl_certificate_key {{SSL_PATH}}/manager.pem;
    ssl_trusted_certificate {{SSL_PATH}}/authority.crt;
    ssl_client_certificate {{SSL_PATH}}/authority.crt;
    ssl_verify_client optional;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers RC4:HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    gzip_comp_level 2;

    location /certificate/ {
        return 301 https://$http_host/certificate;
    }

    location /certificate {
        alias {{SSL_PATH}}/authority.crt;
        types {}
        default_type application/octet-stream;
        add_header Content-disposition "attachment; filename=download.cer";
    }

    location ~ ^/$ {
        return 301 https://$http_host/ui;
    }

    location ~ /static/chroma_ui/styles/imports-.+\.css {
        root {{APP_PATH}}/chroma_ui;
        gzip on;
        gzip_types text/css;
        etag on;

        expires 1y;
        add_header Cache-Control "public";
    }

    location ~ /static/chroma_ui/built-.+\.js {
        root {{APP_PATH}}/chroma_ui;

        gzip on;
        gzip_types application/x-javascript application/javascript text/javascript application/json;
        etag on;

        expires 1y;
        add_header Cache-Control "public";
    }

    location /static/webhelp {
        alias {{APP_PATH}}/ui-modules/node_modules/intel-help-docs/;

        gzip on;
        gzip_types text/plain text/xml text/css application/x-javascript application/javascript text/javascript application/json;

        index index.html;
    }

    location /static {
        root {{APP_PATH}}/chroma_ui;

        gzip on;
        gzip_types text/plain text/xml text/css application/x-javascript application/javascript text/javascript application/json;
    }

    location /ui {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{VIEW_SERVER_PORT}}/ui;

        gzip on;
    }

    location /api {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{HTTP_API_PORT}}/api;
    }

    location /socket.io {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{REALTIME_PORT}}/socket.io;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /agent/register {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{HTTP_AGENT_PORT}}/agent/register;
    }

    location /agent/setup {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{HTTP_AGENT_PORT}}/agent/setup;
    }

    location /agent/reregister {
        if ($ssl_client_verify != SUCCESS) {
            return 401;
        }

        proxy_set_header X-SSL-Client-On $ssl_client_verify;
        proxy_set_header X-SSL-Client-Name $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Serial $ssl_client_serial;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{HTTP_AGENT_PORT}}/agent/reregister;
    }

    location /agent/message {
        client_body_buffer_size 1m;

        if ($ssl_client_verify != SUCCESS) {
            return 401;
        }

        proxy_set_header X-SSL-Client-On $ssl_client_verify;
        proxy_set_header X-SSL-Client-Name $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Serial $ssl_client_serial;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{HTTP_AGENT_PORT}}/agent/message;
    }

    location /agent/copytool_event {
        if ($ssl_client_verify != SUCCESS) {
            return 401;
        }

        proxy_set_header X-SSL-Client-On $ssl_client_verify;
        proxy_set_header X-SSL-Client-Name $ssl_client_s_dn_cn;
        proxy_set_header X-SSL-Client-Serial $ssl_client_serial;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://127.0.0.1:{{HTTP_AGENT_PORT}}/agent/copytool_event;
    }

    location /repo/ {
        if ($ssl_client_verify != SUCCESS) {
            return 401;
        }

        proxy_set_header X-SSL-Client-On $ssl_client_verify;
        proxy_set_header X-SSL-Client-Name $ssl_client_s_dn_cn;

        autoindex on;
        alias {{REPO_PATH}}/;
    }

    location /client/ {
        autoindex on;
        alias {{REPO_PATH}}/lustre-client/;
    }
}
