
<IfDefine ChromaDev>

# In development mode, this file is a standalone apache config, whereas
# in production mode it is added to the system defaults.

ErrorLog {{log}}/error_log
PidFile {{var}}/httpd.pid
LockFile {{var}}/accept.lock

LoadModule proxy_module {{module_path}}mod_proxy.so
LoadModule proxy_http_module {{module_path}}mod_proxy_http.so
LoadModule alias_module {{module_path}}mod_alias.so
LoadModule authz_host_module {{module_path}}mod_authz_host.so
LoadModule rewrite_module {{module_path}}mod_rewrite.so
LoadModule headers_module {{module_path}}mod_headers.so
LoadModule log_config_module {{module_path}}mod_log_config.so
LoadModule ssl_module {{module_path}}mod_ssl.so
LoadModule status_module {{module_path}}mod_status.so
LoadModule deflate_module {{module_path}}mod_deflate.so
# load this from homedir in dev
LoadModule proxy_wstunnel_module {{var}}/mod_proxy_wstunnel.so
LoadModule env_module {{module_path}}mod_env.so
ExtendedStatus on


LogFormat "%h %l %u %t \"%r\" %>s %b" common
CustomLog {{log}}/access_log common

Listen {{HTTPS_FRONTEND_PORT}}
Listen {{HTTP_FRONTEND_PORT}}

</IfDefine>

DocumentRoot .

KeepAlive On
MaxKeepAliveRequests 500
KeepAliveTimeout 2

# worker MPM
# StartServers: initial number of server processes to start
# MaxClients: maximum number of simultaneous client connections
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestsPerChild: maximum number of requests a server process serves
<IfModule worker.c>
  StartServers 2
  # MaxClients is calculated at runtime from the available memory
  MaxClients {{APACHE_MAX_CLIENTS}}
  MinSpareThreads 1
  MaxSpareThreads 4
  ThreadsPerChild 25
  MaxRequestsPerChild 1000
</IfModule>

# HTTPS frontend
NameVirtualHost *:{{HTTPS_FRONTEND_PORT}}

# HTTP just to redirect to HTTPS
NameVirtualHost *:{{HTTP_FRONTEND_PORT}}

Timeout 60
ProxyTimeout 330

<VirtualHost *:{{HTTP_FRONTEND_PORT}}>
    RewriteEngine On
    RewriteCond %{HTTPS} !=on
    RewriteRule ^/?(.*) https://%{SERVER_NAME}:{{HTTPS_FRONTEND_PORT}}/$1 [R,L]
</VirtualHost>

<VirtualHost *:{{HTTPS_FRONTEND_PORT}}>
    SSLEngine on
    SSLProxyEngine on
    SSLProtocol all -SSLv2 -SSLv3
    SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:!LOW:!SSLv2:+EXP
    SSLCertificateFile {{SSL_PATH}}/manager.crt
    SSLCertificateKeyFile {{SSL_PATH}}/manager.pem
    SSLCACertificateFile {{SSL_PATH}}/authority.crt

    RedirectMatch permanent ^/$ /ui/

    <Location /server-status>
        SetHandler server-status
        Order deny,allow
        Deny from all
        Allow from localhost 127.0.0.1 ::1
    </Location>

    # TODO: put something here to disallow all access other than
    # the whitelisted directories

    Alias /certificate/ {{SSL_PATH}}/authority.crt

    <Location "/favicon.ico">
        SetHandler None
    </Location>

    <IfDefine ChromaDev>
        <Location /static/>
            ProxyPass http://localhost:{{HTTP_API_PORT}}/static/

            AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/x-javascript application/javascript text/javascript
        </Location>
    </IfDefine>
    <IfDefine !ChromaDev>
        Alias /static {{APP_PATH}}/static/

        <LocationMatch "/static/chroma_ui/styles/imports-.+.css">
            ExpiresActive On
            ExpiresDefault "access plus 3 years"
        </LocationMatch>

        <LocationMatch "/static/chroma_ui/built-.+.js">
            ExpiresActive On
            ExpiresDefault "access plus 3 years"
        </LocationMatch>

        <Location "/static">
            SetHandler None

            AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/x-javascript application/javascript text/javascript
        </Location>
    </IfDefine>

    <Location /ui/>
        ProxyPassReverse http://localhost:{{HTTP_API_PORT}}/api/
        ProxyPassReverse http://localhost:{{HTTP_API_PORT}}/ui/
        ProxyPass http://localhost:{{HTTP_API_PORT}}/ui/

        AddOutputFilterByType DEFLATE text/html
    </Location>
    <Location /api/>
        SetEnv proxy-nokeepalive 1
        ProxyPass http://localhost:{{HTTP_API_PORT}}/api/
        ProxyPassReverse http://localhost:{{HTTP_API_PORT}}/api/
    </Location>
    <Location /primus/1/websocket/>
      ProxyPass ws://localhost:{{REALTIME_PORT}}/primus/1/websocket/
      ProxyPassReverse ws://localhost:{{REALTIME_PORT}}/primus/1/websocket/
    </Location>
    <Location /primus/>
        ProxyPass http://localhost:{{REALTIME_PORT}}/primus/
        ProxyPassReverse http://localhost:{{REALTIME_PORT}}/primus/
    </Location>

    <Location /agent/register/>
        ProxyPassReverse http://localhost:{{HTTP_API_PORT}}/api/
        ProxyPass http://localhost:{{HTTP_AGENT_PORT}}/agent/register/
    </Location>

    <Location /agent/setup/>
        ProxyPassReverse http://localhost:{{HTTP_AGENT_PORT}}/agent/setup/
        ProxyPass http://localhost:{{HTTP_AGENT_PORT}}/agent/setup/
    </Location>

    <Location /agent/reregister/>
        ProxyPassReverse http://localhost:{{HTTP_AGENT_PORT}}/agent/reregister/

        SSLVerifyClient require
        RewriteCond %{SSL:SSL_CLIENT_VERIFY} (.*)
        RewriteRule .* - [E=SSLC_ON:%1]
        RequestHeader add X-SSL-Client-On %{SSLC_ON}e

        RewriteCond %{SSL:SSL_CLIENT_S_DN_CN} (.*)
        RewriteRule .* - [E=SSLC_NAME:%1]
        RequestHeader add X-SSL-Client-Name %{SSLC_NAME}e

        RewriteCond %{SSL:SSL_CLIENT_M_SERIAL} (.*)
        RewriteRule .* - [E=SSLC_SERIAL:%1]
        RequestHeader add X-SSL-Client-Serial %{SSLC_SERIAL}e

        RewriteEngine on
        RewriteRule ^/(.*)$ http://localhost:{{HTTP_AGENT_PORT}}/agent/reregister/ [P,L]
    </Location>

    <Location /agent/message/>
        ProxyPassReverse http://localhost:{{HTTP_AGENT_PORT}}/agent/message/

        SSLVerifyClient require
        SSLRenegBufferSize 8388608
        RewriteCond %{SSL:SSL_CLIENT_VERIFY} (.*)
        RewriteRule .* - [E=SSLC_ON:%1]
        RequestHeader add X-SSL-Client-On %{SSLC_ON}e

        RewriteCond %{SSL:SSL_CLIENT_S_DN_CN} (.*)
        RewriteRule .* - [E=SSLC_NAME:%1]
        RequestHeader add X-SSL-Client-Name %{SSLC_NAME}e

        RewriteCond %{SSL:SSL_CLIENT_M_SERIAL} (.*)
        RewriteRule .* - [E=SSLC_SERIAL:%1]
        RequestHeader add X-SSL-Client-Serial %{SSLC_SERIAL}e

        RewriteEngine on
        RewriteRule ^/(.*)$ http://localhost:{{HTTP_AGENT_PORT}}/agent/message/ [P,L]
    </Location>

    <Location /agent/copytool_event/>
        ProxyPassReverse http://localhost:{{HTTP_AGENT_PORT}}/agent/copytool_event/

        SSLVerifyClient require
        SSLRenegBufferSize 8388608
        RewriteCond %{SSL:SSL_CLIENT_VERIFY} (.*)
        RewriteRule .* - [E=SSLC_ON:%1]
        RequestHeader add X-SSL-Client-On %{SSLC_ON}e

        RewriteCond %{SSL:SSL_CLIENT_S_DN_CN} (.*)
        RewriteRule .* - [E=SSLC_NAME:%1]
        RequestHeader add X-SSL-Client-Name %{SSLC_NAME}e

        RewriteCond %{SSL:SSL_CLIENT_M_SERIAL} (.*)
        RewriteRule .* - [E=SSLC_SERIAL:%1]
        RequestHeader add X-SSL-Client-Serial %{SSLC_SERIAL}e

        RewriteEngine on
        RewriteRule ^/(.*)$ http://localhost:{{HTTP_AGENT_PORT}}/agent/copytool_event/ [P,L]
    </Location>

Alias /repo {{REPO_PATH}}
    <Location /repo >
        SSLVerifyClient require
        RewriteCond %{SSL:SSL_CLIENT_VERIFY} (.*)
        RewriteRule .* - [E=SSLC_ON:%1]
        RequestHeader add X-SSL-Client-On %{SSLC_ON}e

        RewriteCond %{SSL:SSL_CLIENT_S_DN_CN} (.*)
        RewriteRule .* - [E=SSLC_NAME:%1]
    </Location>

    Alias /client {{REPO_PATH}}/lustre-client
    <Location /client >
        SSLVerifyClient none
        Options +Indexes
    </Location>
</VirtualHost>

