%define name hydra-server
%define version @VERSION@
%define unmangled_version @VERSION@
%define release 1

Summary: The Whamcloud Lustre Monitoring and Adminisration Interface
Name: %{name}
Version: %{version}
Release: %{release}
Source0: %{name}-%{unmangled_version}.tar.gz
Source1: hydra-server.conf
Source2: hydra-worker-init.sh
Source3: hydra-storage-init.sh
Source4: hydra-welcome.conf
License: Proprietary
Group: Development/Libraries
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-buildroot
Prefix: %{_prefix}
BuildArch: noarch
Vendor: Whamcloud, Inc. <info@whamcloud.com>
Url: http://www.whamcloud.com/
Requires: Django >= 1.3, mod_wsgi, httpd, python-dateutil, python-uuid, python-multiprocessing, python-paramiko, django-pagination, django-kombu, django-celery, rsyslog-mysql, mysql-server, MySQL-python >= 1.2.1p2, rabbitmq-server, hydra-agent, django-picklefield, python-amqplib, django-piston, django-r3d

%description
This is the Whamcloud Monitoring and Adminstration Interface

%prep
%setup -n %{name}-%{unmangled_version}
echo -e "/^DEBUG =/s/= .*$/= False/\nwq" | ed settings.py

%build
python setup.py build

%install
make install DESTDIR=$RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/etc/{{init,httpd/conf}.d,init}
cp %{SOURCE1} $RPM_BUILD_ROOT/etc/httpd/conf.d/hydra-server.conf
cp %{SOURCE2} $RPM_BUILD_ROOT/etc/init.d/hydra-worker
cp %{SOURCE3} $RPM_BUILD_ROOT/etc/init.d/hydra-storage
cp %{SOURCE4} $RPM_BUILD_ROOT/etc/init/hydra-welcome.conf

%clean
rm -rf $RPM_BUILD_ROOT

%post
ed /etc/httpd/conf.d/wsgi.conf <<EOF 2>/dev/null
/^#LoadModule /s/^#\(LoadModule wsgi_module modules\/mod_wsgi.so\)/\1/
w
q
EOF
# make sure apache sees our changes
service httpd reload

# Pre-create log files to set permissions
mkdir -p /var/log/hydra
touch /var/log/hydra/job.log
touch /var/log/hydra/audit.log
touch /var/log/hydra/storage_plugin.log
touch /var/log/hydra/hydraapi.log
touch /var/log/hydra/metrics.log
chown -R apache:apache /var/log/hydra

# This is required for opening connections between
# httpd and rabbitmq-server
setsebool -P httpd_can_network_connect 1

# start apache at boot time
chkconfig httpd on
# start rsyslog at boot time
chkconfig rsyslog on
# start hydra-work at boot time
chkconfig --add hydra-worker
# start hydra-storage at boot time
chkconfig --add hydra-storage
# start mysqld at boot time
# start mysqld at boot time
chkconfig mysqld on
chkconfig rabbitmq-server on

# configure rsyslog.conf
while egrep -q  "^# Added by hydra-server" /etc/rsyslog.conf; do
    ed /etc/rsyslog.conf <<EOF
/^# Added by hydra-server/;/^# Added by hydra-server/d
w
q
EOF
done

ed /etc/rsyslog.conf <<"EOF" >/dev/null 2>&1
/#\$InputTCPServerRun 514$/a
# Added by hydra-server
# enable receiving on TCP
$ModLoad imtcp.so
$InputTCPServerRun 514
# MySQL logging
$ModLoad ommysql
# Added by hydra-server
.
$
a
# Added by hydra-server
*.*       :ommysql:localhost,hydra,root
# Added by hydra-server
.
w
q
EOF

# disable getty on tty1 so that hydra-welcome.conf can emit it's message
ed <<"EOF" /etc/sysconfig/init
/^ACTIVE_CONSOLES=/s/\[1/[2/
w
q
EOF

%preun
# remove the /static/ dir of files that was created by Django's collectstatic
rm -rf /usr/share/hydra-server/static

%postun
# remove rsyslog entries if this the last version being removed.
if [[ $1 -eq 0 ]]; then
    # configure rsyslog.conf
    while egrep -q  "^# Added by hydra-server" /etc/rsyslog.conf; do
        ed /etc/rsyslog.conf <<"EOF"
/^# Added by hydra-server/;/^# Added by hydra-server/d
w
q
EOF
    done
fi

%files
%defattr(-,root,root)
%dir %attr(0755,apache,apache)/usr/share/hydra-server
/usr/share/hydra-server/*
/etc/httpd/conf.d/hydra-server.conf
%attr(0755,root,root)/etc/init.d/hydra-worker
%attr(0755,root,root)/etc/init.d/hydra-storage
%attr(0755,root,root)/etc/init/hydra-welcome.conf
