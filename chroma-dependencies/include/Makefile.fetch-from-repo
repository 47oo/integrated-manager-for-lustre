TOP ?= $(shell while [[ $$PWD != */chroma-dependencies ]]; do cd ..; done; echo $$PWD)
include $(TOP)/include/Makefile.meta

rpms: $(addprefix $(TOP)/../chroma-externals/,$(ALL_RPMS))

requirements:
	for rpm in $(ALL_RPMS); do                \
		base=$${rpm##*/};                 \
		name=$${base%-*};                 \
		version=$${name##*-};             \
		name=$${name%-*};                 \
		for p in $(NO_REQUIREMENT); do    \
			if [ $$name = $$p ]; then \
				continue 2;       \
			fi;                       \
		done;                             \
		name=$${name#python-};            \
		echo "$$name==$$version";         \
	done
	if [ -n "$(REQUIREMENTS)" ]; then           \
		echo $(REQUIREMENTS) | tr ' ' '\n'; \
	fi;                                         \
		

REPO_TARGETS = $(patsubst %, $(REPO)/%,$(ALL_RPMS))

decruftinate:
	@echo "Checking for cruft in $(CURDIR)..."
	@rpm_name() { base=$${1##*/}; name=$${base%-*}; version=$${name%-*}; name=$${name%-*}; echo $$name; }; \
	WANTED=""; \
	for rpm in $(ALL_RPMS); do \
	  WANTED="$$WANTED $$(rpm_name $$rpm)"; \
	done; \
	echo "Desired RPMs: $$WANTED"; \
	for exists in $$(ls $(CURDIR)/*.rpm 2>/dev/null); do \
	    name=$$(rpm_name $$exists); \
		if [[ $$WANTED != *$$name* ]]; then \
		    echo "removing cruft: $$name"; \
			rm -f $$exists; \
			rm -f $(REPO)/$$(basename $$exists); \
		fi; \
	done

install: decruftinate $(REPO_TARGETS)

uninstall:
	rm -f $(REPO_TARGETS)

clean:
	rm -f $(ALL_RPMS)

distclean:
	rm -f $(ALL_RPMS)

download: $(addprefix $(TOP)/../chroma-externals/,$(ALL_RPMS))

cleanrepo:
	rm -rf $(REPO)

$(REPO)/%.rpm: $(TOP)/../chroma-externals/%.rpm
	mkdir -p $(REPO)
	rm -f $@
	ln $^ $(REPO)/

$(TOP)/../chroma-externals/%.rpm:
	CACHE="$${CACHE:-$(TOP)/../chroma-externals}" . ../include/cache.sh; \
	cache_populate -t "RPM v3.0 bin " $(SRC_REPO)/$(notdir $@)
